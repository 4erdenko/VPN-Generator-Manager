name: Test. Build. Deploy.

on:
  push:
    branches:
      - master

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8==6.0.0 flake8-isort==6.0.0
          pip install -r ./requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8 .

  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and run Docker container
        env:
          BOT_API: ${{ secrets.BOT_API_TEST }}
          CHAT_ID: 200100001
        run: |
          echo "BOT_API=${BOT_API}" >> .env
          echo "CHAT_ID=${CHAT_ID}" >> .env
          mkdir wireguard
          cd wireguard
          echo "${{ secrets.WG0_CONF }}" > wg0.conf
          cd ..
          docker compose up -d
          sleep 20
      - name: Verify Docker Images
        run: docker images
      - name: Check Docker logs
        run: |
          docker compose ls
          docker compose logs

      - name: Stop Docker container
        run: |
          set -e
          docker compose down

  deploy:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Stop containers and clean directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            sudo docker compose down
            sudo docker image prune -f

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy code via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "."
          target: "${{ secrets.PROJECT_PATH }}"
      - name: Create .env file and fill it with Github secrets
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH }}
            rm -rf .env
            echo BOT_API=${{ secrets.BOT_API }} >> .env
            echo CHAT_ID=${{ secrets.CHAT_ID }} >> .env
            echo START_MSG=${{ secrets.START_MSG }} >> .env
      - name: Create wg0.conf file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH }}
            mkdir wireguard
            cd wireguard
            echo "${{ secrets.WG0_CONF }}" > wg0.conf
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH }}
            sudo docker compose up -d --build
            sudo docker image prune -a -f
